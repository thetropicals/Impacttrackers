#include <WiFi.h>
#include <HTTPClient.h>

#define WIFI_SSID "RP26"
#define WIFI_PASSWORD "12345678"
#define On_Board_LED 2

// Google Sheets URL (replace with your actual Google Apps Script URL)
const char* googleScriptURL = "https://script.google.com/macros/s/AKfycbzRL0T8b6mQzUTzYMBR1fuV6UVcFeSkkMh055gjUysVYjex19s9ZQV6et811E-Nd02Unw/exec";

unsigned long sendDataPrevMillis = 0;
const long sendDataIntervalMillis = 500;

void setup() {
  Serial.begin(115200);                // Initialize serial for debugging
  Serial2.begin(9600, SERIAL_8N1, 16, 17); // Initialize Serial2 for Arduino communication
  Serial.println("Waiting for data from Arduino...");

  // Initialize WiFi
  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to WiFi");
  
  // Wait until WiFi is connected
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println();
  Serial.println("Connected to WiFi");
  pinMode(On_Board_LED, OUTPUT); // Set LED as output
}

void loop() {
  delay(400); // Small delay to avoid flooding

  // Check if data is available from Arduino
  if (Serial2.available()) {
    String data = Serial2.readStringUntil('\n'); // Read data as a string
    Serial.println("Received from Arduino: " + data);

    // Parse the CSV data
    String values[9];
    int prevComma = -1;
    int nextComma = -1;

    for (int i = 0; i < 8; i++) {
      nextComma = data.indexOf(',', prevComma + 1);
      if (nextComma == -1) break; // Handle incomplete or malformed data
      values[i] = data.substring(prevComma + 1, nextComma);
      prevComma = nextComma;
    }
    values[8] = data.substring(prevComma + 1);

    // Assign parsed values
    float latitude = values[0].toFloat();
    float longitude = values[1].toFloat();
    int hour = values[2].toInt();
    int minute = values[3].toInt();
    int second = values[4].toInt();
    int speed = values[5].toInt();
    float roll = values[6].toFloat();
    int ethanol = values[7].toInt();
    int force = values[8].toInt();

    // Display parsed values for debugging
    Serial.print("Latitude: "); Serial.println(latitude);
    Serial.print("Longitude: "); Serial.println(longitude);
    Serial.print("Hour: "); Serial.println(hour);
    Serial.print("Minute: "); Serial.println(minute);
    Serial.print("Second: "); Serial.println(second);
    Serial.print("Speed: "); Serial.println(speed);
    Serial.print("Roll: "); Serial.println(roll);
    Serial.print("Ethanol: "); Serial.println(ethanol);
    Serial.print("Force: "); Serial.println(force);

    // Send data to Google Sheets if connected to WiFi and interval has passed
    if (WiFi.status() == WL_CONNECTED && (millis() - sendDataPrevMillis > sendDataIntervalMillis || sendDataPrevMillis == 0)) {
      sendDataPrevMillis = millis();
      digitalWrite(On_Board_LED, HIGH); // Turn on LED to indicate data sending

      // Initialize HTTP client
      HTTPClient http;
      http.begin(googleScriptURL);
      http.addHeader("Content-Type", "application/json");

      // Construct JSON data string
      String jsonData = "{\"latitude\":" + String(latitude, 6) +
                        ",\"longitude\":" + String(longitude, 6) +
                        ",\"hour\":" + String(hour) +
                        ",\"minute\":" + String(minute) +
                        ",\"second\":" + String(second) +
                        ",\"speed\":" + String(speed) +
                        ",\"roll\":" + String(roll, 2) +
                        ",\"ethanol\":" + String(ethanol) +
                        ",\"force\":" + String(force) + "}";

      int httpResponseCode = http.POST(jsonData);

      // Check response
      if (httpResponseCode > 0) {
        String response = http.getString();
        Serial.println(httpResponseCode);
        Serial.println(response);
      } else {
        Serial.print("Error code: ");
        Serial.println(httpResponseCode);
      }

      // End HTTP connection
      http.end();
      digitalWrite(On_Board_LED, LOW); // Turn off LED after sending
    }
  }
}
